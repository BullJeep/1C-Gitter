
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ВыполнитьДействияПоКоммитамДляГитлаба( Знач пМассивДействий, Знач пКомментарий, Знач пДанныеХранилища ) Экспорт
	
	номераИшузов = ПолучитьНомераИшузов( пКомментарий );
	
	Если номераИшузов.Количество() = 0 Тогда // Нет ссылок на ишузы
		
		Возврат;
		
	КонецЕсли;
	
	Для каждого цДействие Из пМассивДействий Цикл
		
		Если СтрНайти( ВРег( пКомментарий ), ВРег( цДействие.Команда ) ) = 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Для каждого цНомерИшуза Из номераИшузов Цикл
			
			ВыполнитьДействиеДляИшуза( цДействие, цНомерИшуза, пДанныеХранилища );
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьДействиеДляИшуза( Знач пДействие, Знач пНомерИшуза, пДанныеХранилища )
	
	таймаут = 10;
	
	HTTPСоединение = Новый HTTPСоединение( пДанныеХранилища.ИмяСервера,
										   ,
										   ,
										   ,
										   ,
										   таймаут,
										   Новый ЗащищенноеСоединениеOpenSSL( , Новый СертификатыУдостоверяющихЦентровWindows ) );
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить( "PRIVATE-TOKEN", пДанныеХранилища.Токен );
	
	ресурс = "/api/v4/projects/%1/issues/%2";
	ресурс = СтрШаблон( ресурс, Формат( пДанныеХранилища.ИдПроекта, "ЧГ=" ), Формат( пНомерИшуза, "ЧГ=" ) );
	
	HTTPЗапрос = Новый HTTPЗапрос( ресурс, Заголовки );
	ОтветHTTP  = HTTPСоединение.Get( HTTPЗапрос );
	
	Если Не ОтветHTTP.КодСостояния = 200 Тогда
		
		ЛогОшибка( "Ошибка получения ишуза " + пНомерИшуза + " через API. " + ОтветHTTP.КодСостояния + ". " + ОтветHTTP.ПолучитьТелоКакСтроку() );
		
	КонецЕсли;
	
	чтениеJSON = Новый ЧтениеJSON;
	чтениеJSON.УстановитьСтроку( ОтветHTTP.ПолучитьТелоКакСтроку() );
	параметрыЗадачи = ПрочитатьJSON( ЧтениеJSON, Истина );
	чтениеJSON.Закрыть();
	
	текущиеЛэйблы = параметрыЗадачи.Получить( "labels" );
	
	естьИзменения = Ложь;
	
	Если Не ТипЗнч( текущиеЛэйблы ) = Тип( "Массив" ) Тогда
		
		текущиеЛэйблы = Новый Массив;
		
	КонецЕсли;
	
	Для каждого цСтрока Из пДействие.УдаляемыеЛэблы Цикл
		
		найденныйЭлемент = текущиеЛэйблы.Найти( цСтрока.Лэйбл );
		
		Если Не найденныйЭлемент = Неопределено Тогда
			
			текущиеЛэйблы.Удалить( найденныйЭлемент );
			естьИзменения = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого цСтрока Из пДействие.ДобавляемыеЛэйблы Цикл
		
		найденныйЭлемент = текущиеЛэйблы.Найти( цСтрока.Лэйбл );
		
		Если найденныйЭлемент = Неопределено Тогда
			
			текущиеЛэйблы.Добавить( цСтрока.Лэйбл );
			естьИзменения = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если естьИзменения Тогда
		
		ресурсИзменениеЛэйблов = ресурс + "?labels=" + КодироватьСтроку( СтрСоединить( текущиеЛэйблы, "," ), СпособКодированияСтроки.КодировкаURL );
		
		HTTPЗапрос = Новый HTTPЗапрос( ресурсИзменениеЛэйблов, Заголовки );
		ОтветHTTP  = HTTPСоединение.Put( HTTPЗапрос );
		
		Если ОтветHTTP.КодСостояния = 200 Тогда
			
			ЛогИнформация( "Ишуз " + пНомерИшуза + " успешно изменен через API. " );
			
		Иначе
			
			ЛогОшибка( "Ошибка изменения ишуза " + пНомерИшуза + " через API. " + ОтветHTTP.КодСостояния + ". " + ОтветHTTP.ПолучитьТелоКакСтроку() );
			
		КонецЕсли;
		
	КонецЕсли;
	
	комментарий = пДействие.ТекстКомментарияКИшузу;
	
	участники = параметрыЗадачи.Получить( "assignees" );
	
	призывыУчастников = Новый Массив;
	
	Если ТипЗнч( участники ) = Тип( "Массив" ) Тогда
		
		Для каждого цУчастник Из участники Цикл
			
			имяУчастника = цУчастник.Получить( "username" );
			
			Если ЗначениеЗаполнено( имяУчастника ) Тогда
				
				призывыУчастников.Добавить( "@" + имяУчастника );
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	комментарий = СтрЗаменить( комментарий, "[assignees]", СтрСоединить( призывыУчастников, ", " ) );
	
	ресурсДобавлениеКомментария = ресурс + "/notes?body=" + КодироватьСтроку( комментарий, СпособКодированияСтроки.КодировкаURL );
	
	HTTPЗапрос = Новый HTTPЗапрос( ресурсДобавлениеКомментария, Заголовки );
	ОтветHTTP  = HTTPСоединение.Post( HTTPЗапрос );
	
	Если ОтветHTTP.КодСостояния = 201 Тогда
		
		ЛогИнформация( "В ишуз " + пНомерИшуза + " успешно добавлен комментарий через API. " );
		
	Иначе
		
		ЛогОшибка( "" + ОтветHTTP.КодСостояния + ". Ошибка добавления комментария к ишузу " + пНомерИшуза + ". " + ОтветHTTP.ПолучитьТелоКакСтроку() );
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНомераИшузов( Знач пКомментарий )
	
	массивНомеров = Новый Массив;
	
	Если Не ЗначениеЗаполнено( пКомментарий ) Тогда
		
		Возврат массивНомеров;
		
	КонецЕсли;
	
	номерВхождения = 1;
	позицияРешетки = СтрНайти( пКомментарий, "#", , , номерВхождения );
	
	Пока позицияРешетки > 0 Цикл
		
		номер = ПолучитьПодстрокуЦифр( пКомментарий, позицияРешетки + 1 );
		
		Если ЗначениеЗаполнено( номер ) Тогда
			
			массивНомеров.Добавить( номер );
			
		КонецЕсли;
		
		номерВхождения = номерВхождения + 1;
		позицияРешетки = СтрНайти( пКомментарий, "#", , , номерВхождения );
		
	КонецЦикла;
	
	Возврат массивНомеров;
	
КонецФункции

Функция ПолучитьПодстрокуЦифр( Знач пТекст, Знач пПозицияНачала )
	
	Результат    = "";
	ПозицияКонца = СтрДлина( пТекст );
	ПоискНачала  = Истина;
	
	Пока пПозицияНачала <= ПозицияКонца Цикл
		
		текСимвол = Сред( пТекст, пПозицияНачала, 1 );
		
		Если текСимвол >= "0" И текСимвол <= "9" Тогда
			
			Результат = Результат + текСимвол;
			
		Иначе
			
			Прервать;
			
		КонецЕсли;
		
		пПозицияНачала = пПозицияНачала + 1;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли

